@model IEnumerable<ProyectommstoreConsumido.Models.Usuarios>

@{
    ViewBag.Title = "USUARIO_LISTADO";
}



<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<h2 class="mb-4 text-black">Mantenimiento de Usuarios</h2>

<div id="detallesUsuario">
</div>

<div class="d-flex justify-content-end mb-3">
    <button id="btnNuevoUsuario" class="btn  rounded-pill btn-sm" style=" background-color: #4b0081; color: #e9ecef; border-collapse: collapse;"><i class="bi bi-plus-circle-fill me-2"></i> Nuevo Usuario</button>
</div>


<div class="table-responsive">
    <table class="table table-hover rounded-top rounded-bottom shadow-sm" style="border-collapse: collapse;">
        <thead class="bg-secondary">
            <tr>
                <th scope="col" style="padding: 0.75rem; font-size: 0.9rem; font-weight: 500; border-bottom: 2px solid #545b62;">@Html.DisplayNameFor(model => model.UsuarioID)</th>
                <th scope="col" style="padding: 0.75rem; font-size: 0.9rem; font-weight: 500; border-bottom: 2px solid #545b62;">@Html.DisplayNameFor(model => model.NombreUsuario)</th>
                <th scope="col" style="padding: 0.75rem; font-size: 0.9rem; font-weight: 500; border-bottom: 2px solid #545b62;">@Html.DisplayNameFor(model => model.password)</th>
                <th scope="col" style="padding: 0.75rem; font-size: 0.9rem; font-weight: 500; border-bottom: 2px solid #545b62;">@Html.DisplayNameFor(model => model.Email)</th>
                <th scope="col" class="text-center" style="padding: 0.75rem; font-size: 0.9rem; font-weight: 500; border-bottom: 2px solid #545b62;">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td style="padding: 0.6rem; font-size: 0.85rem; border-bottom: 1px solid #e9ecef;">@Html.DisplayFor(modelItem => item.UsuarioID)</td>
                    <td style="padding: 0.6rem; font-size: 0.85rem; border-bottom: 1px solid #e9ecef;">@Html.DisplayFor(modelItem => item.NombreUsuario)</td>
                    <td style="padding: 0.6rem; font-size: 0.85rem; border-bottom: 1px solid #e9ecef;">@Html.DisplayFor(modelItem => item.password)</td>
                    <td style="padding: 0.6rem; font-size: 0.85rem; border-bottom: 1px solid #e9ecef;">@Html.DisplayFor(modelItem => item.Email)</td>
                    <td class="text-center" style="padding: 0.6rem; font-size: 0.85rem; border-bottom: 1px solid #e9ecef; display: flex; align-items: center; justify-content: center;">
                        <button type="button" class="btn btn-sm btn-outline-success btnVerDetalles rounded-pill" data-usuario-id="@item.UsuarioID"><i class="bi bi-eye me-2"></i></button>
                        @Html.ActionLink("Editar", "Edit", new { id = item.UsuarioID }, new { @class = "btn btn-sm btn-outline-primary rounded-pill me-1", style = "font-size: 0.75rem;" })
                        @using (Html.BeginForm("USUARIO_ELIMINADO", "Usuario", new { id = item.UsuarioID }, FormMethod.Post, new { @class = "formEliminarUsuario" }))
                        {
                            @Html.AntiForgeryToken()
                            <button type="button" class="btn btn-sm btn-outline-danger rounded-pill btnEliminarUsuario" data-bs-toggle="modal" data-bs-target="#confirmarEliminarModal">
                                <i class="bi bi-trash-fill me-1"></i>
                            </button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>
    .table-responsive {
        border: 1px solid #ced4da; /* color del borde de la tabla */
        border-radius: 0.5rem;
        overflow: auto;
    }

    .table {
        margin-bottom: 0;
        border-collapse: collapse;
    }

    thead.bg-secondary th {
        background-color: #4b0081; /* Fondo azul del encabezado de productos */
        color: white;
        font-weight: 500;
        text-align: left;
        border-bottom: 2px solid #4b0070;
    }

    tbody td {
        border-bottom: 1px solid #e9ecef;
        font-size: 0.85rem;
    }

    tbody tr:last-child td {
        border-bottom: none;
    }

    tbody tr:hover {
        background-color: #f5f5f5;
        cursor: pointer;
    }

    .btn-outline-primary {
        color: #4b0081;
        border-color: #4b0081;
    }

        .btn-outline-primary:hover {
            background-color: #4b0070;
            border-color: #4b0070;
            color: white;
        }

    .btn-outline-info {
        color: #17a2b8;
        border-color: #17a2b8;
    }

        .btn-outline-info:hover {
            background-color: #17a2b8;
            color: white;
        }

    .btn-outline-danger {
        color: #dc3545;
        border-color: #dc3545;
    }

        .btn-outline-danger:hover {
            background-color: #dc3545;
            color: white;
        }
</style>


@Html.Partial("_CrearUsuarioModal", new ProyectommstoreConsumido.Models.RegistroViewModel())

@Html.AntiForgeryToken()
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        //js para ventana de registrar Usuario
        $(document).ready(function () {
            var nuevoUsuarioBtn = document.getElementById("btnNuevoUsuario");
            var crearUsuarioModal = document.getElementById("crearUsuarioModal");

            if (nuevoUsuarioBtn && crearUsuarioModal) {
                nuevoUsuarioBtn.addEventListener("click", function () {
                    $(crearUsuarioModal).modal('show');
                });
            } else {
                console.error("No se encontraron el botón o el modal.");
            }
        });

    </script>

    <script>
        //js para mensaje de boton eliminar
        document.addEventListener("DOMContentLoaded", function () {
            const botonesEliminar = document.querySelectorAll(".btnEliminarUsuario");

            botonesEliminar.forEach(boton => {
                boton.addEventListener("click", function () {
                    const formulario = this.closest("form");

                    Swal.fire({
                        title: '¿Estás seguro?',
                        text: "Este usuario será eliminado permanentemente.",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#6c757d',
                        confirmButtonText: 'Sí, eliminar',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            formulario.submit();
                        }
                    });
                });
            });
        });
    </script>

    <script>
     
         //js para detalles
        $(document).ready(function () {
            console.log("El script de detalles se está ejecutando."); // Verifica si el script se carga

            $(".btnVerDetalles").click(function () {
                console.log("Se hizo clic en el botón Detalles."); // Verifica si el evento de clic se dispara
                var UsuarioID = $(this).data("usuario-id");
                console.log("ID del usuario:", UsuarioID); // Verifica si se obtiene el ID correctamente
                $.ajax({
                    url: '@Url.Action("MostrarDetallesUsuario", "Usuario")',
                    type: 'GET',
                    data: { id: UsuarioID },
                    success: function (data) {
                        $("#detallesUsuario").html(data);
                    },
                    error: function (error) {
                        console.error("Error al cargar los detalles:", error);
                        $("#detallesUsuario").html("<p>Error al cargar los detalles del producto.</p>");
                    }
                });
            });
        });
    </script>
}